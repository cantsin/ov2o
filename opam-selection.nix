# ## This file is generated by opam2nix.

self:
let
  lib = self.lib;
  pkgs = self.pkgs;
  repoPath = self.repoPath;
  repos = {
    opam-repository = rec {
      fetch = {
        owner = "ocaml";
        repo = "opam-repository";
        rev = "5e371ca8633408aacb85e9b4a78a82d8e96ac946";
        sha256 = "19593wr9q7y0m6hrj66a42ka97v7d53fv69p4hrrl76bjfwa3h94";
      };
      src = (pkgs.fetchFromGitHub) fetch;
    };
  };
  selection = self.selection;
in {
  format-version = 4;
  ocaml-version = "4.10.2";
  repos = repos;
  selection = {
    angstrom = {
      opamInputs = {
        bigstringaf = selection.bigstringaf;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-syntax-shims = selection.ocaml-syntax-shims;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0izk8jl0gryfajlvby1yf954mxg9fhw85rcnd36v6l0whsg61x3m";
        package = "packages/angstrom/angstrom.0.15.0";
      };
      pname = "angstrom";
      src = pkgs.fetchurl {
        sha256 = "01cjjal8vjsm225v9y0q6ixam8k5f821rcr6yix6i9nzs84aq6gi";
        url = "https://github.com/inhabitedtype/angstrom/archive/0.15.0.tar.gz";
      };
      version = "0.15.0";
    };
    astring = {
      opamInputs = {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1djnad9sq12idlakj069xvwm2nn7wqm137pqbxxai5frkgi08x74";
        package = "packages/astring/astring.0.8.5";
      };
      pname = "astring";
      src = pkgs.fetchurl {
        sha256 = "1ykhg9gd3iy7zsgyiy2p9b1wkpqg9irw5pvcqs3sphq71iir4ml6";
        url =
          "https://erratique.ch/software/astring/releases/astring-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    base = {
      opamInputs = {
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1ywk7bk0rwf8kpjsp9qdsckwhs53xcg8a4rakk0b0w83qq38a19v";
        package = "packages/base/base.v0.14.1";
      };
      pname = "base";
      src = pkgs.fetchurl {
        sha256 = "13b0xc62ka8i2ry2r62gc194wzfdq1vqf2qygwrrk26pvqn8a9l9";
        url = "https://github.com/janestreet/base/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    base-bytes = {
      opamInputs = {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0a68lmbf68jgm1i3b59j2sc3ha9yhv4678f9mfwwvczw88prq7l3";
        package = "packages/base-bytes/base-bytes.base";
      };
      pname = "base-bytes";
      src = null;
      version = "base";
    };
    base-threads = {
      opamInputs = { };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1c4bpyh61ampjgk5yh3inrgcpf1z1xv0pshn54ycmpn4dyzv0p2x";
        package = "packages/base-threads/base-threads.base";
      };
      pname = "base-threads";
      src = null;
      version = "base";
    };
    base-unix = {
      opamInputs = { };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0mpsvb7684g723ylngryh15aqxg3blb7hgmq2fsqjyppr36iyzwg";
        package = "packages/base-unix/base-unix.base";
      };
      pname = "base-unix";
      src = null;
      version = "base";
    };
    base_bigstring = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_jane = selection.ppx_jane;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:00wbcv0p6fkyva8h9djcnj6kwp1k3djv2a4jwbyv4rky13cyjqx3";
        package = "packages/base_bigstring/base_bigstring.v0.14.0";
      };
      pname = "base_bigstring";
      src = pkgs.fetchurl {
        sha256 = "1fhldk58w56ixkin763kpic512xvkkf9b4mrnjfsbm8in75kzndq";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/base_bigstring-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    base_quickcheck = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_base = selection.ppx_base;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_let = selection.ppx_let;
        ppx_sexp_message = selection.ppx_sexp_message;
        ppx_sexp_value = selection.ppx_sexp_value;
        ppxlib = selection.ppxlib;
        splittable_random = selection.splittable_random;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1928apqyzj8r5j4hadrdp4nnl26silim0jiycllmaa78s0j2lmq2";
        package = "packages/base_quickcheck/base_quickcheck.v0.14.1";
      };
      pname = "base_quickcheck";
      src = pkgs.fetchurl {
        sha256 = "0n5h0ysn593awvz4crkvzf5r800hd1c55bx9mm9vbqs906zii6mn";
        url =
          "https://github.com/janestreet/base_quickcheck/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    bigarray-compat = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:04frgyb1gmlfjni3dj1zkfsrsw1j6iq13b1k8w7w6ljhxr007wsn";
        package = "packages/bigarray-compat/bigarray-compat.1.0.0";
      };
      pname = "bigarray-compat";
      src = pkgs.fetchurl {
        sha256 = "1bpmmnxb1yx72aqlbdaqfl18rgz1cq9cf6cqvnfl88mz5dfr4x0d";
        url = "https://github.com/mirage/bigarray-compat/archive/v1.0.0.tar.gz";
      };
      version = "1.0.0";
    };
    bigstringaf = {
      opamInputs = {
        bigarray-compat = selection.bigarray-compat;
        conf-pkg-config = selection.conf-pkg-config;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-freestanding = selection.ocaml-freestanding or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:027l5qq6bhws0w5wp85aw5dqs6387ca2zz12njqc42jpcbdv6xbz";
        package = "packages/bigstringaf/bigstringaf.0.7.0";
      };
      pname = "bigstringaf";
      src = pkgs.fetchurl {
        sha256 = "1q4fswcy3n3gja3cnrg3z5wxbl6gh983vsh7ykry6sck961hh2k6";
        url =
          "https://github.com/inhabitedtype/bigstringaf/archive/0.7.0.tar.gz";
      };
      version = "0.7.0";
    };
    bin_prot = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        mirage-xen-ocaml = selection.mirage-xen-ocaml or null;
        ocaml = selection.ocaml;
        ppx_compare = selection.ppx_compare;
        ppx_custom_printf = selection.ppx_custom_printf;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_optcomp = selection.ppx_optcomp;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppx_variants_conv = selection.ppx_variants_conv;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0c6qlm4z1l1q6qypz3571jky7bwxk5w60grnv0aq4wy6hjr7x0w5";
        package = "packages/bin_prot/bin_prot.v0.14.0";
      };
      pname = "bin_prot";
      src = pkgs.fetchurl {
        sha256 = "1f1ng6cixi3ci0nb765yfzqk9b3s752hy1i3702kh59gni1psycp";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/bin_prot-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    conf-m4 = {
      buildInputs = [ (pkgs.m4) ];
      opamInputs = { };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1jlhg718lz35jyr5w0sgvg5ycplhnd8653rc4980yci8p3z1vlxs";
        package = "packages/conf-m4/conf-m4.1";
      };
      pname = "conf-m4";
      src = null;
      version = "1";
    };
    conf-pkg-config = {
      buildInputs = [ (pkgs.pkgconfig) ];
      opamInputs = { };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0dqmqf1znm1jqbq1m1k2w6021ryavwmj9v1vxxazch4kq4mkxyxf";
        package = "packages/conf-pkg-config/conf-pkg-config.2";
      };
      pname = "conf-pkg-config";
      src = null;
      version = "2";
    };
    core = {
      buildInputs = [ (pkgs.linux-headers or null) ];
      opamInputs = {
        base-threads = selection.base-threads;
        core_kernel = selection.core_kernel;
        dune = selection.dune;
        jst-config = selection.jst-config;
        ocaml = selection.ocaml;
        ppx_jane = selection.ppx_jane;
        sexplib = selection.sexplib;
        spawn = selection.spawn;
        timezone = selection.timezone;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0yicl1vha7mqr8mj7mwhcax2i4djcn1lykamz9pyk6dd29y23mqz";
        package = "packages/core/core.v0.14.1";
      };
      pname = "core";
      src = pkgs.fetchurl {
        sha256 = "1862zsk85i00vsv2chgb156b1chp8f7p508hsz6sadjx6h98q5cc";
        url = "https://github.com/janestreet/core/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    core_kernel = {
      opamInputs = {
        base = selection.base;
        base_bigstring = selection.base_bigstring;
        base_quickcheck = selection.base_quickcheck;
        bin_prot = selection.bin_prot;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        jane-street-headers = selection.jane-street-headers;
        jst-config = selection.jst-config;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        ppx_base = selection.ppx_base;
        ppx_hash = selection.ppx_hash;
        ppx_inline_test = selection.ppx_inline_test;
        ppx_jane = selection.ppx_jane;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppx_sexp_message = selection.ppx_sexp_message;
        sexplib = selection.sexplib;
        splittable_random = selection.splittable_random;
        stdio = selection.stdio;
        time_now = selection.time_now;
        typerep = selection.typerep;
        variantslib = selection.variantslib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:08jn0n7gdm11p30vvzc1vr5hmz8ifmvpbwli504954hl5a1c0d2r";
        package = "packages/core_kernel/core_kernel.v0.14.1";
      };
      pname = "core_kernel";
      src = pkgs.fetchurl {
        sha256 = "0f24sagyzhfr6x68fynhsn5cd1p72vkqm25wnfg8164sivas148x";
        url =
          "https://github.com/janestreet/core_kernel/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    cppo = {
      opamInputs = {
        base-unix = selection.base-unix;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1kga0i21r60914qcjnxaxx03p6vj476j4sgcfnndcawycsip8zix";
        package = "packages/cppo/cppo.1.6.7";
      };
      pname = "cppo";
      src = pkgs.fetchurl {
        sha256 = "17ajdzrnmnyfig3s6hinb56mcmhywbssxhsq32dz0v90dhz3wmfv";
        url =
          "https://github.com/ocaml-community/cppo/releases/download/v1.6.7/cppo-v1.6.7.tbz";
      };
      version = "1.6.7";
    };
    csexp = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1wi05gfxxhg8i2i2mdgigqq0cxc3dizxzr7j6729mq4mfb06gpxx";
        package = "packages/csexp/csexp.1.4.0";
      };
      pname = "csexp";
      src = pkgs.fetchurl {
        sha256 = "0kinvwzbylcx2ky8s8a7ki1i0vql1lm2mdz8vqka20pihz56ygcf";
        url =
          "https://github.com/ocaml-dune/csexp/releases/download/1.4.0/csexp-1.4.0.tbz";
      };
      version = "1.4.0";
    };
    dune = {
      opamInputs = {
        base-threads = selection.base-threads;
        base-unix = selection.base-unix;
        ocaml = selection.ocaml or null;
        ocamlfind-secondary = selection.ocamlfind-secondary or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1nifrwp9g1d9rxj184vvvldgm1151h28pmsnzfagxp0gj53pni64";
        package = "packages/dune/dune.2.8.2";
      };
      pname = "dune";
      src = pkgs.fetchurl {
        sha256 = "07mf6pnmv1a6wh4la45zf6cn6qy2vcmz4xgx0djj75kw1wiyii72";
        url =
          "https://github.com/ocaml/dune/releases/download/2.8.2/dune-2.8.2.tbz";
      };
      version = "2.8.2";
    };
    dune-configurator = {
      opamInputs = {
        csexp = selection.csexp;
        dune = selection.dune;
        ocaml = selection.ocaml;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:18li0h84pnx743h6gn3gry7ygm3b7wnvmsvdjl71z5zm1qvfirlr";
        package = "packages/dune-configurator/dune-configurator.2.8.2";
      };
      pname = "dune-configurator";
      src = pkgs.fetchurl {
        sha256 = "07mf6pnmv1a6wh4la45zf6cn6qy2vcmz4xgx0djj75kw1wiyii72";
        url =
          "https://github.com/ocaml/dune/releases/download/2.8.2/dune-2.8.2.tbz";
      };
      version = "2.8.2";
    };
    fieldslib = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1ayrqisqs2shn9nlga3pz3k84y12bw5b6cr6fi8rgv5gi9hr33lq";
        package = "packages/fieldslib/fieldslib.v0.14.0";
      };
      pname = "fieldslib";
      src = pkgs.fetchurl {
        sha256 = "10n5y376fb5jgqk9h8vq158rm1b36h9lzh6p11q33h6xgvb1v6n3";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/fieldslib-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    fmt = {
      opamInputs = {
        base-unix = selection.base-unix or null;
        cmdliner = selection.cmdliner or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        seq = selection.seq;
        stdlib-shims = selection.stdlib-shims;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1lvq50p7a5i59jqkn4zijxm9p92c6phi20akdj3qbmlnjn8lqs7h";
        package = "packages/fmt/fmt.0.8.9";
      };
      pname = "fmt";
      src = pkgs.fetchurl {
        sha256 = "0gkkkj4x678vxdda4xaw2dd44qjacavsvn5nx8gydfwah6pjbkxk";
        url = "https://erratique.ch/software/fmt/releases/fmt-0.8.9.tbz";
      };
      version = "0.8.9";
    };
    gmap = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0pliwm7xynn6a810zg2ywp1nxwqjs9y7akx5lslhk4h63j41i5ac";
        package = "packages/gmap/gmap.0.3.0";
      };
      pname = "gmap";
      src = pkgs.fetchurl {
        sha256 = "073wa0lrb0jj706j87cwzf1a8d1ff14100mnrjs8z3xc4ri9xp84";
        url =
          "https://github.com/hannesm/gmap/releases/download/0.3.0/gmap-0.3.0.tbz";
      };
      version = "0.3.0";
    };
    icalendar = {
      opamInputs = {
        angstrom = selection.angstrom;
        astring = selection.astring;
        dune = selection.dune;
        fmt = selection.fmt;
        gmap = selection.gmap;
        ocaml = selection.ocaml;
        ppx_deriving = selection.ppx_deriving;
        ptime = selection.ptime;
        re = selection.re;
        rresult = selection.rresult;
        stdlib-shims = selection.stdlib-shims;
        uri = selection.uri;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0hm4lp2gq4s8dkrb3fpr48nw233h8bx8kr7ra65zdph1k8vd6yqz";
        package = "packages/icalendar/icalendar.0.1.4";
      };
      pname = "icalendar";
      src = pkgs.fetchurl {
        sha256 = "058vvcvhr2jla0y0crk1rag2imiicjdr64rkffjpzvxgzl003zs2";
        url =
          "https://github.com/roburio/icalendar/releases/download/v0.1.4/icalendar-v0.1.4.tbz";
      };
      version = "0.1.4";
    };
    jane-street-headers = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1w5v1xjvbyy6ccwq2hvxbhwagrlmvpqwz317dxx880l39h6ikg76";
        package = "packages/jane-street-headers/jane-street-headers.v0.14.0";
      };
      pname = "jane-street-headers";
      src = pkgs.fetchurl {
        sha256 = "028yxb4h3iy025iy89v8653m5brh7flrjshghs4x99pd690pmfs7";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/jane-street-headers-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    jst-config = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        dune-configurator = selection.dune-configurator;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0lysc7rwijrxic5nky8k5fbamcjvh406yg7zcd7278vn63cc5vml";
        package = "packages/jst-config/jst-config.v0.14.0";
      };
      pname = "jst-config";
      src = pkgs.fetchurl {
        sha256 = "1fppr29vn91zpqda8jlnp8bcssd4bf3rn36ig8fnd1yhjrsvz8f6";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/jst-config-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    num = {
      opamInputs = {
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:01k7lkq8ika76vaj6rfvq6v5q8ch9jd8iw5zx82anl6jkl274wkn";
        package = "packages/num/num.1.4";
      };
      pname = "num";
      src = pkgs.fetchurl {
        sha256 = "090gl27g84r3s2b12vgkz8fp269jqlrhx4lpg7008yviisv8hl01";
        url = "https://github.com/ocaml/num/archive/v1.4.tar.gz";
      };
      version = "1.4";
    };
    ocaml = {
      opamInputs = {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-config = selection.ocaml-config;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1j9xgxnbgzrar4rwynm7jd0bi3f5qwwkgyxvk1pd8iazvn81pgya";
        package = "packages/ocaml/ocaml.4.10.2";
      };
      pname = "ocaml";
      src = null;
      version = "4.10.2";
    };
    ocaml-base-compiler = {
      opamInputs = { };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1j4623nkx2jwgmx689m5z4i3i6fkqgk0m5jq8hqzi89gxmsnqb9x";
        package = "packages/ocaml-base-compiler/ocaml-base-compiler.4.10.2";
      };
      pname = "ocaml-base-compiler";
      src = pkgs.fetchurl {
        sha256 = "0fdw4abyp37q7acqaqawy64gakpg7xckw5ssfpn8dbwxlzqf1fjq";
        url = "https://github.com/ocaml/ocaml/archive/4.10.2.tar.gz";
      };
      version = "4.10.2";
    };
    ocaml-compiler-libs = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0z6sqlawly39g8bxax8c97ir8gq4rl9rqjlx69gg672c561knavh";
        package = "packages/ocaml-compiler-libs/ocaml-compiler-libs.v0.12.3";
      };
      pname = "ocaml-compiler-libs";
      src = pkgs.fetchurl {
        sha256 = "1jg32fjr7n4933r01iqgablshagx20vgjkjh5pdbn54w8cqkah58";
        url =
          "https://github.com/janestreet/ocaml-compiler-libs/releases/download/v0.12.3/ocaml-compiler-libs-v0.12.3.tbz";
      };
      version = "v0.12.3";
    };
    ocaml-config = {
      opamInputs = {
        ocaml-base-compiler = selection.ocaml-base-compiler or null;
        ocaml-system = selection.ocaml-system or null;
        ocaml-variants = selection.ocaml-variants or null;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0g5s0yysgqdrbgx7vyh56fhx59xypw6hdwlcbzbqcgvj4zp4yy0c";
        package = "packages/ocaml-config/ocaml-config.1";
      };
      pname = "ocaml-config";
      src = null;
      version = "1";
    };
    ocaml-migrate-parsetree = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:18cw30az9wgpqjvg7fcdjgxzi294nkxriilan81nxw7bszmhs08l";
        package =
          "packages/ocaml-migrate-parsetree/ocaml-migrate-parsetree.2.1.0";
      };
      pname = "ocaml-migrate-parsetree";
      src = pkgs.fetchurl {
        sha256 = "07x7lm45kny0mi0fjvzw51445brm0dgy099cw0gpyly0wj77hyrq";
        url =
          "https://github.com/ocaml-ppx/ocaml-migrate-parsetree/releases/download/v2.1.0/ocaml-migrate-parsetree-v2.1.0.tbz";
      };
      version = "2.1.0";
    };
    ocaml-syntax-shims = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0zhmv9pr3rryn8a08g8vka0viscryd7fkn5gj2294pw6fygv5m4h";
        package = "packages/ocaml-syntax-shims/ocaml-syntax-shims.1.0.0";
      };
      pname = "ocaml-syntax-shims";
      src = pkgs.fetchurl {
        sha256 = "1j7848khli4p7j8i2kmnvhdnhcwhy3zgdpf5ds5ic30ax69y3cl9";
        url =
          "https://github.com/ocaml-ppx/ocaml-syntax-shims/releases/download/1.0.0/ocaml-syntax-shims-1.0.0.tbz";
      };
      version = "1.0.0";
    };
    ocamlbuild = {
      opamInputs = { ocaml = selection.ocaml; };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0hrzb4fgz7qh7cr65j5yq6fai82fhyl6bp8s9pwcj1a2yhczbviv";
        package = "packages/ocamlbuild/ocamlbuild.0.14.0";
      };
      pname = "ocamlbuild";
      src = pkgs.fetchurl {
        sha256 = "0y1fskw9rg2y1zgb7whv3v8v4xw04svgxslf3856q2aqd7lrrcl7";
        url = "https://github.com/ocaml/ocamlbuild/archive/0.14.0.tar.gz";
      };
      version = "0.14.0";
    };
    ocamlfind = {
      opamInputs = {
        conf-m4 = selection.conf-m4;
        graphics = selection.graphics or null;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0gipclfkvihny5ljh8pqyy36qjhfkfj2zvzcxf2dgzngs1y32id7";
        package = "packages/ocamlfind/ocamlfind.1.8.1";
      };
      pname = "ocamlfind";
      src = pkgs.fetchurl {
        sha256 = "00s3sfb02pnjmkax25pcnljcnhcggiliccfz69a72ic7gsjwz1cf";
        url = "http://download.camlcity.org/download/findlib-1.8.1.tar.gz";
      };
      version = "1.8.1";
    };
    octavius = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:13xj7il7gdad672wf8aih0g8h3v03kk2526yswmis460s6irwrpl";
        package = "packages/octavius/octavius.1.2.2";
      };
      pname = "octavius";
      src = pkgs.fetchurl {
        sha256 = "1bg0fcm7haqxvx5wx2cci0mbbq0gf1vw9fa4kkd6jsriw1611jga";
        url = "https://github.com/ocaml-doc/octavius/archive/v1.2.2.tar.gz";
      };
      version = "1.2.2";
    };
    ov2o = {
      opamInputs = {
        core = selection.core;
        icalendar = selection.icalendar;
      };
      opamSrc = "ov2o.opam";
      pname = "ov2o";
      src = self.directSrc "ov2o";
      version = "1.0.0";
    };
    parsexp = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:187z69l5222908gdp098b4zll925jdn2kml3wyw1lm9jzwwqhmq2";
        package = "packages/parsexp/parsexp.v0.14.0";
      };
      pname = "parsexp";
      src = pkgs.fetchurl {
        sha256 = "158znj19dvfdcwsgzs3rdhxpj1g4aw0d4nkfr8c05bahf0lnshlb";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/parsexp-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_assert = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_cold = selection.ppx_cold;
        ppx_compare = selection.ppx_compare;
        ppx_here = selection.ppx_here;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1xn8fwwr1d361p4w1y145h52qs5rxccfp0wzpbzhiyq7h9gammc3";
        package = "packages/ppx_assert/ppx_assert.v0.14.0";
      };
      pname = "ppx_assert";
      src = pkgs.fetchurl {
        sha256 = "1l2rr4jz2q5b35ryn2z146z7m9v6k8krp5gpn8ilib66mnz5zx15";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_assert-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_base = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_cold = selection.ppx_cold;
        ppx_compare = selection.ppx_compare;
        ppx_enumerate = selection.ppx_enumerate;
        ppx_hash = selection.ppx_hash;
        ppx_js_style = selection.ppx_js_style;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1375pp4lsp9migg3dldq6sqcmz15c4rfxac9y967qlvf4h1h0d4x";
        package = "packages/ppx_base/ppx_base.v0.14.0";
      };
      pname = "ppx_base";
      src = pkgs.fetchurl {
        sha256 = "0b7a3fmi90jk8paz0g36yzaq670fbnrbi1j8r5ibh9wbcfli7ji6";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_base-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_bench = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_inline_test = selection.ppx_inline_test;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1c2xy6bzgyqw4l6wdpzpsrm7qljly0c21zsjsn85gfkjqpi41fq6";
        package = "packages/ppx_bench/ppx_bench.v0.14.1";
      };
      pname = "ppx_bench";
      src = pkgs.fetchurl {
        sha256 = "1jr3cf4zsk894x64c8ir9ap9l412q35b2605pr7flrlxbm4vkf3f";
        url = "https://github.com/janestreet/ppx_bench/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppx_bin_prot = {
      opamInputs = {
        base = selection.base;
        bin_prot = selection.bin_prot;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_here = selection.ppx_here;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0988pl1kl697sc91m6laww4pfs3yf1xchhyfjx8ii580j9jva4w6";
        package = "packages/ppx_bin_prot/ppx_bin_prot.v0.14.0";
      };
      pname = "ppx_bin_prot";
      src = pkgs.fetchurl {
        sha256 = "0wa2jmvm2k88b37pbcafy1mdf5iaip0yxg5dw774sbh28nm08m2s";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_bin_prot-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_cold = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0zclrvfrnqx0w3jsgy04cbj7ik50pyzsbzbk6k8i0zvj0aw7wlwh";
        package = "packages/ppx_cold/ppx_cold.v0.14.0";
      };
      pname = "ppx_cold";
      src = pkgs.fetchurl {
        sha256 = "1madfzhpir9amnxmg530n70vll0jrl59vyp71miji73i6b9sy6n2";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_cold-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_compare = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0sca0xgwn5567zi0i0x72mnr12vwjlqxdn6p234hla0ryjgsxvny";
        package = "packages/ppx_compare/ppx_compare.v0.14.0";
      };
      pname = "ppx_compare";
      src = pkgs.fetchurl {
        sha256 = "0mqxa2s194nif7x4fjn1p5gd9i3bakr8nv27gf8x1g5nmi8q9pmp";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_compare-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_custom_printf = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:02mir9006aa9dfnb9sgjrx6s0qhgpisl0k3d4gfbkysjwspqr4dq";
        package = "packages/ppx_custom_printf/ppx_custom_printf.v0.14.1";
      };
      pname = "ppx_custom_printf";
      src = pkgs.fetchurl {
        sha256 = "0kzbckbvhfn3s9an1hq01qd5iac7wgirw182ablpqxc6r3dmijrl";
        url =
          "https://github.com/janestreet/ppx_custom_printf/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppx_derivers = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0r8rjp4m5jfbf3wz8qlgh82pxjws4arjwxhqq0zjglby6l6h8p3x";
        package = "packages/ppx_derivers/ppx_derivers.1.2.1";
      };
      pname = "ppx_derivers";
      src = pkgs.fetchurl {
        sha256 = "159vqy616ni18mn0dlv8c2y4h7mb4hahwjn53yrr59yyhzhmwndn";
        url = "https://github.com/ocaml-ppx/ppx_derivers/archive/1.2.1.tar.gz";
      };
      version = "1.2.1";
    };
    ppx_deriving = {
      opamInputs = {
        cppo = selection.cppo;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocamlfind = selection.ocamlfind;
        ppx_derivers = selection.ppx_derivers;
        ppxlib = selection.ppxlib;
        result = selection.result;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:03qdj6qn1ffw8dhpp5q0yd0xmb61f58im5n2hsi2ma0xf6n1n7dy";
        package = "packages/ppx_deriving/ppx_deriving.5.2.1";
      };
      pname = "ppx_deriving";
      src = pkgs.fetchurl {
        sha256 = "11h75dsbv3rs03pl67hdd3lbim7wjzh257ij9c75fcknbfr5ysz9";
        url =
          "https://github.com/ocaml-ppx/ppx_deriving/releases/download/v5.2.1/ppx_deriving-v5.2.1.tbz";
      };
      version = "5.2.1";
    };
    ppx_enumerate = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1g6v4avpxdqr1s9va0py7i21grsdn8vmmyvnsixkzpa12cj7wn2z";
        package = "packages/ppx_enumerate/ppx_enumerate.v0.14.0";
      };
      pname = "ppx_enumerate";
      src = pkgs.fetchurl {
        sha256 = "1ij6sffgqhnjwnj9brhrrw1c6xgxlh0s6r17x1qkgnyrc73gfsz8";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_enumerate-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_expect = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_here = selection.ppx_here;
        ppx_inline_test = selection.ppx_inline_test;
        ppxlib = selection.ppxlib;
        re = selection.re;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1rx2avb0rlf5ci2qxb2ypgmsxclg6hfpgrsgvw0qlmfwz0lhvgpk";
        package = "packages/ppx_expect/ppx_expect.v0.14.1";
      };
      pname = "ppx_expect";
      src = pkgs.fetchurl {
        sha256 = "188zaqdqxqw9xbga1ip4yi5f9p41zgdqr51idcnw4yayvdxg81q3";
        url = "https://github.com/janestreet/ppx_expect/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppx_fields_conv = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        fieldslib = selection.fieldslib;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1nycsravcyajfrw9bckc2pk1rc6lmqyx9cvqpmw7nlvfb1wbnq0q";
        package = "packages/ppx_fields_conv/ppx_fields_conv.v0.14.2";
      };
      pname = "ppx_fields_conv";
      src = pkgs.fetchurl {
        sha256 = "0r7d51j54r1za6bwqsmhmhhfab8n10zyk5zznhkm91f20dx9ddip";
        url =
          "https://github.com/janestreet/ppx_fields_conv/archive/v0.14.2.tar.gz";
      };
      version = "v0.14.2";
    };
    ppx_fixed_literal = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1pghiydydag6kadgclql11jm8xgpcy56lfxl3vqlm9d48yv9dq76";
        package = "packages/ppx_fixed_literal/ppx_fixed_literal.v0.14.0";
      };
      pname = "ppx_fixed_literal";
      src = pkgs.fetchurl {
        sha256 = "0w0a06143mhmczbpr0lfb66r6im7075gck4p0idbcari63sximqj";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_fixed_literal-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_hash = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_compare = selection.ppx_compare;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1knpmv5fn6pb4yj58spbdxmgqdw1rxknlrlhlr6g4sc7mrm14xj8";
        package = "packages/ppx_hash/ppx_hash.v0.14.0";
      };
      pname = "ppx_hash";
      src = pkgs.fetchurl {
        sha256 = "0x4wgdvhgd8a49bzari52jpkykxpv6ncgp5ncda3xgg0a9r49s8n";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_hash-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_here = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1mcb4ljvlhybga4rph12wf3frd11dw89mlc32z0dh20ydhf7y1k9";
        package = "packages/ppx_here/ppx_here.v0.14.0";
      };
      pname = "ppx_here";
      src = pkgs.fetchurl {
        sha256 = "0b444djy68v6ji0ypwv5l02pkl151qzrgg96lyhl8dxfrzvj1zkj";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_here-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_inline_test = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        time_now = selection.time_now;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0gzgb51knpbhbqcrsa0c8lxd09pslf84l1isdn3d81rl61zgkmhv";
        package = "packages/ppx_inline_test/ppx_inline_test.v0.14.1";
      };
      pname = "ppx_inline_test";
      src = pkgs.fetchurl {
        sha256 = "0qzvm8rg07annl8zpqlhzx1z8ahrrf02r1brd43ykqas5sww3rfp";
        url =
          "https://github.com/janestreet/ppx_inline_test/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppx_jane = {
      opamInputs = {
        base_quickcheck = selection.base_quickcheck;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        ppx_base = selection.ppx_base;
        ppx_bench = selection.ppx_bench;
        ppx_bin_prot = selection.ppx_bin_prot;
        ppx_custom_printf = selection.ppx_custom_printf;
        ppx_expect = selection.ppx_expect;
        ppx_fields_conv = selection.ppx_fields_conv;
        ppx_fixed_literal = selection.ppx_fixed_literal;
        ppx_here = selection.ppx_here;
        ppx_inline_test = selection.ppx_inline_test;
        ppx_let = selection.ppx_let;
        ppx_module_timer = selection.ppx_module_timer;
        ppx_optcomp = selection.ppx_optcomp;
        ppx_optional = selection.ppx_optional;
        ppx_pipebang = selection.ppx_pipebang;
        ppx_sexp_message = selection.ppx_sexp_message;
        ppx_sexp_value = selection.ppx_sexp_value;
        ppx_stable = selection.ppx_stable;
        ppx_string = selection.ppx_string;
        ppx_typerep_conv = selection.ppx_typerep_conv;
        ppx_variants_conv = selection.ppx_variants_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1a32chn26hf4lgkj1alxzxh6gf6xmnk6b1k6f1hyf2cxw4l28qv5";
        package = "packages/ppx_jane/ppx_jane.v0.14.0";
      };
      pname = "ppx_jane";
      src = pkgs.fetchurl {
        sha256 = "18js98xdqf8d54sjn1gccjkwbv2p56qy7bhvjgk94pr3fipfz0v7";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_jane-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_js_style = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        octavius = selection.octavius;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:00pkf2zijkawjcpjrc4qc17rdqpkg6jwhvxlw3ddscs1ih8hxixy";
        package = "packages/ppx_js_style/ppx_js_style.v0.14.0";
      };
      pname = "ppx_js_style";
      src = pkgs.fetchurl {
        sha256 = "141fgxfipfn5jdaxc946dmp5y4fcnbhxms9maji9ddywgx82ya7l";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_js_style-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_let = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:13lc4338qg8an01z9q3k3b68p7f77ls60pz6dxcp95h69gvkb6k4";
        package = "packages/ppx_let/ppx_let.v0.14.0";
      };
      pname = "ppx_let";
      src = pkgs.fetchurl {
        sha256 = "1qcrnd86pbr1di5m6z4ps4p15qawwa02jxwz3xfd82hdbjmdwf1s";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_let-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_module_timer = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_base = selection.ppx_base;
        ppxlib = selection.ppxlib;
        stdio = selection.stdio;
        time_now = selection.time_now;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0014xlymrkhy9ncxs6d04mc4b007m15wczkw8zf3rjf4007wy6mj";
        package = "packages/ppx_module_timer/ppx_module_timer.v0.14.0";
      };
      pname = "ppx_module_timer";
      src = pkgs.fetchurl {
        sha256 = "04a7vzk4s3jn6wj94q0hn8kd9vxlzkpcq5ifpvz3bdfgmypjks5z";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_module_timer-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_optcomp = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:17yfm8v43m7nfxlhd1ab2dpbjk93vzx2iaa5frm9cyp7sxkx48yq";
        package = "packages/ppx_optcomp/ppx_optcomp.v0.14.1";
      };
      pname = "ppx_optcomp";
      src = pkgs.fetchurl {
        sha256 = "04izdfyx6a7vhl4d2yzzkmn71paa6gss5xcjajjyk3yyl9lv4f1y";
        url =
          "https://github.com/janestreet/ppx_optcomp/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppx_optional = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1g7rwbv2zlaj1h7vz1dd4qwjffvgdq8ms2rh7ahb2gjriwdnyn33";
        package = "packages/ppx_optional/ppx_optional.v0.14.0";
      };
      pname = "ppx_optional";
      src = pkgs.fetchurl {
        sha256 = "1hh6ivlp1qpvyn8l0vhrahkkcp3scf7km254sgplprmk10wnyidz";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_optional-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_pipebang = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0ab4d6dmpbnky98kikafmnbid6wg5mh8z5cbg7rjbzygkpmj3ms7";
        package = "packages/ppx_pipebang/ppx_pipebang.v0.14.0";
      };
      pname = "ppx_pipebang";
      src = pkgs.fetchurl {
        sha256 = "19afbbvy72i1347prvkpy3ms75xnk7kl2hn83h40p6yh27100hky";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_pipebang-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_sexp_conv = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0304xkqnidiz25zpibwlmrvw7g2kgbp6244rh8ns9hrp98kd1v4n";
        package = "packages/ppx_sexp_conv/ppx_sexp_conv.v0.14.3";
      };
      pname = "ppx_sexp_conv";
      src = pkgs.fetchurl {
        sha256 = "0fbnkhsd6yphc49pa21nlmbik99n7qkaz8l9paq96v012ipg9h9g";
        url =
          "https://github.com/janestreet/ppx_sexp_conv/archive/v0.14.3.tar.gz";
      };
      version = "v0.14.3";
    };
    ppx_sexp_message = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_here = selection.ppx_here;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1r4rif1idpziq62gjy7fcxjpgbjxp3ia8fkg0qjzsyf5crkv5dj2";
        package = "packages/ppx_sexp_message/ppx_sexp_message.v0.14.1";
      };
      pname = "ppx_sexp_message";
      src = pkgs.fetchurl {
        sha256 = "06d1cx8nh6chgx09lqjgsagc02lfsvv18fydrviqjvydx52m2qjf";
        url =
          "https://github.com/janestreet/ppx_sexp_message/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppx_sexp_value = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_here = selection.ppx_here;
        ppx_sexp_conv = selection.ppx_sexp_conv;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1ci0rx0j0rbja1d147bwacw2s61ma6yr05525plx6hqmjb77qhqh";
        package = "packages/ppx_sexp_value/ppx_sexp_value.v0.14.0";
      };
      pname = "ppx_sexp_value";
      src = pkgs.fetchurl {
        sha256 = "0yc6i1yx9mb8pwjkswy09aqg5kz1hgrpjyniq2v6whfjvxl1qrkj";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/ppx_sexp_value-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    ppx_stable = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1ql7rr6j439j6qy5pj9scz8x7m92nbvv64i4x1r65gb0qjrdjxai";
        package = "packages/ppx_stable/ppx_stable.v0.14.1";
      };
      pname = "ppx_stable";
      src = pkgs.fetchurl {
        sha256 = "1dw8ilrvi5lssxnbflnzskmyi3k93ij2kbyz49y93agv0b8dsq01";
        url = "https://github.com/janestreet/ppx_stable/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppx_string = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_base = selection.ppx_base;
        ppxlib = selection.ppxlib;
        stdio = selection.stdio;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0kn2ak1y33lvmiwrhkrnmql30id0gv7iblb947z94mahfvb5agk1";
        package = "packages/ppx_string/ppx_string.v0.14.1";
      };
      pname = "ppx_string";
      src = pkgs.fetchurl {
        sha256 = "1a8f7bplbxvwm4lh0m57j89jkwkxfm9r5ndcvvlj5v6py8pv69wj";
        url = "https://github.com/janestreet/ppx_string/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppx_typerep_conv = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        typerep = selection.typerep;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:07iycq622i133jdk2sfnvp5xvgakzfp9inirirclcwwz6jybyf51";
        package = "packages/ppx_typerep_conv/ppx_typerep_conv.v0.14.2";
      };
      pname = "ppx_typerep_conv";
      src = pkgs.fetchurl {
        sha256 = "1g1sb3prscpa7jwnk08f50idcgyiiv0b9amkl0kymj5cghkdqw0n";
        url =
          "https://github.com/janestreet/ppx_typerep_conv/archive/v0.14.2.tar.gz";
      };
      version = "v0.14.2";
    };
    ppx_variants_conv = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppxlib = selection.ppxlib;
        variantslib = selection.variantslib;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0qvdl83n0cavq158zl6d1l63qp428d6rkqbjwqbagzbs3z6w2gmr";
        package = "packages/ppx_variants_conv/ppx_variants_conv.v0.14.1";
      };
      pname = "ppx_variants_conv";
      src = pkgs.fetchurl {
        sha256 = "00rqyghszjm6sp6r4b7b7lwkypiwkmkr1w02v3bjsragzml0alg0";
        url =
          "https://github.com/janestreet/ppx_variants_conv/archive/v0.14.1.tar.gz";
      };
      version = "v0.14.1";
    };
    ppxlib = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
        ocaml-compiler-libs = selection.ocaml-compiler-libs;
        ocaml-migrate-parsetree = selection.ocaml-migrate-parsetree;
        ppx_derivers = selection.ppx_derivers;
        sexplib0 = selection.sexplib0;
        stdlib-shims = selection.stdlib-shims;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:09s9v2jxi57chwi685hjiw3m7374vj7qg1c7a6bf29pvqm3iyn83";
        package = "packages/ppxlib/ppxlib.0.22.0";
      };
      pname = "ppxlib";
      src = pkgs.fetchurl {
        sha256 = "0ykdp55i6x1a5mbxjlvwcfvs4kvzxqnn2bi2lf224rk677h93sry";
        url =
          "https://github.com/ocaml-ppx/ppxlib/releases/download/0.22.0/ppxlib-0.22.0.tbz";
      };
      version = "0.22.0";
    };
    ptime = {
      opamInputs = {
        js_of_ocaml = selection.js_of_ocaml or null;
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0ldzn2jmz8c3n9rr4mqyfa92lkb3378cmik3klznbln7lsf4fa1v";
        package = "packages/ptime/ptime.0.8.5";
      };
      pname = "ptime";
      src = pkgs.fetchurl {
        sha256 = "1fxq57xy1ajzfdnvv5zfm7ap2nf49znw5f9gbi4kb9vds942ij27";
        url = "https://erratique.ch/software/ptime/releases/ptime-0.8.5.tbz";
      };
      version = "0.8.5";
    };
    re = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
        seq = selection.seq;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:10m5h5myw3pnjvk7z1j7hhx18zpbm7kad2196ljgvj7y169zba61";
        package = "packages/re/re.1.9.0";
      };
      pname = "re";
      src = pkgs.fetchurl {
        sha256 = "1gas4ky49zgxph3870nffzkr6y41kkpqp4nj38pz1gh49zcf12aj";
        url =
          "https://github.com/ocaml/ocaml-re/releases/download/1.9.0/re-1.9.0.tbz";
      };
      version = "1.9.0";
    };
    result = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1c7lw8dbchllz3rl801xwpm82r427vnrv7b7kqh0gwjglya50y28";
        package = "packages/result/result.1.5";
      };
      pname = "result";
      src = pkgs.fetchurl {
        sha256 = "0cpfp35fdwnv3p30a06wd0py3805qxmq3jmcynjc3x2qhlimwfkw";
        url =
          "https://github.com/janestreet/result/releases/download/1.5/result-1.5.tbz";
      };
      version = "1.5";
    };
    rresult = {
      opamInputs = {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
        result = selection.result;
        topkg = selection.topkg;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:10vaq82rzip2rn1rbq27pjckvqassjh1n58pnsypldqaahxnbca6";
        package = "packages/rresult/rresult.0.6.0";
      };
      pname = "rresult";
      src = pkgs.fetchurl {
        sha256 = "1k69a3gvrk7f2cshwjzvk7818f0bwxhacgd14wxy6d4gmrggci86";
        url = "http://erratique.ch/software/rresult/releases/rresult-0.6.0.tbz";
      };
      version = "0.6.0";
    };
    seq = {
      opamInputs = { ocaml = selection.ocaml; };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1vm8mk6zm2q3fwnkprl6jib048zr4ysldw0bl74x6wwbxj0vx6k9";
        package = "packages/seq/seq.base";
      };
      pname = "seq";
      src = null;
      version = "base";
    };
    sexplib = {
      opamInputs = {
        dune = selection.dune;
        num = selection.num;
        ocaml = selection.ocaml;
        parsexp = selection.parsexp;
        sexplib0 = selection.sexplib0;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:13jidm5wz2q2a8d52mkc3gl596vlqmpblbsjbq484kjpd0w6yz0f";
        package = "packages/sexplib/sexplib.v0.14.0";
      };
      pname = "sexplib";
      src = pkgs.fetchurl {
        sha256 = "12rlnc6fcrjfdn3gs2agi418sj54ighhs6dfll37zcv7mgywblm2";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    sexplib0 = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0xgkp4gm3yc47xdqzmz064qn40fp27k4ar5axi5i1wffg15qavd4";
        package = "packages/sexplib0/sexplib0.v0.14.0";
      };
      pname = "sexplib0";
      src = pkgs.fetchurl {
        sha256 = "0adrc0r1vvvr41dcpj8jwkzh1dfgqf0mks9xlnnskqfm3a51iavg";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/sexplib0-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    spawn = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1gmhpv7952wgg72jrr77fq9as0b4iv20gml2aiqqcw8qd50rg9rg";
        package = "packages/spawn/spawn.v0.13.0";
      };
      pname = "spawn";
      src = pkgs.fetchurl {
        sha256 = "00kcdy6lrqllh7n00d7lkvjvqf4kj0y9a2hj2shp0bjqphnjd9nh";
        url =
          "https://github.com/janestreet/spawn/releases/download/v0.13.0/spawn-v0.13.0.tbz";
      };
      version = "v0.13.0";
    };
    splittable_random = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_assert = selection.ppx_assert;
        ppx_bench = selection.ppx_bench;
        ppx_inline_test = selection.ppx_inline_test;
        ppx_sexp_message = selection.ppx_sexp_message;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0nzr3bskg6yi4v9mfjizpc1c48q6p9yabk18hr8yql633l3jvbki";
        package = "packages/splittable_random/splittable_random.v0.14.0";
      };
      pname = "splittable_random";
      src = pkgs.fetchurl {
        sha256 = "185rpmdnrzs80br138pnjbx9hfp1046zvj1ap0brq1sxdwzak6lf";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/splittable_random-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    stdio = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:0czx19l4sb9v80vwig8fwsn5h8xp44j9v5db2b251zkj71dzd9qx";
        package = "packages/stdio/stdio.v0.14.0";
      };
      pname = "stdio";
      src = pkgs.fetchurl {
        sha256 = "1hj5hraprqy2i90a690l11yjszvb99j818q3d684ryx6p2lddk0l";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/stdio-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    stdlib-shims = {
      opamInputs = {
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:19g9dnaxyh2ajz6pdczdsqzzvsmfrxwx6f613inkr31jw5hrqkiz";
        package = "packages/stdlib-shims/stdlib-shims.0.3.0";
      };
      pname = "stdlib-shims";
      src = pkgs.fetchurl {
        sha256 = "0jnqsv6pqp5b5g7lcjwgd75zqqvcwcl5a32zi03zg1kvj79p5gxs";
        url =
          "https://github.com/ocaml/stdlib-shims/releases/download/0.3.0/stdlib-shims-0.3.0.tbz";
      };
      version = "0.3.0";
    };
    stringext = {
      opamInputs = {
        base-bytes = selection.base-bytes;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:15m8a67mps6y22mm5sxpw9b0lldfcmsxim7b331d4qv3l86118gs";
        package = "packages/stringext/stringext.1.6.0";
      };
      pname = "stringext";
      src = pkgs.fetchurl {
        sha256 = "1sh6nafi3i9773j5mlwwz3kxfzdjzsfqj2qibxhigawy5vazahfv";
        url =
          "https://github.com/rgrinberg/stringext/releases/download/1.6.0/stringext-1.6.0.tbz";
      };
      version = "1.6.0";
    };
    time_now = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        jane-street-headers = selection.jane-street-headers;
        jst-config = selection.jst-config;
        ocaml = selection.ocaml;
        ppx_base = selection.ppx_base;
        ppx_optcomp = selection.ppx_optcomp;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:190hli7b7bfxz1paki7bfkamm768llilzkh1y5hvyz22psf5d6x9";
        package = "packages/time_now/time_now.v0.14.0";
      };
      pname = "time_now";
      src = pkgs.fetchurl {
        sha256 = "0hkn2jw4dz5gflnsblskl5wp6z7zbrahwjmaxmsskfviwjg82cqh";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/time_now-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    timezone = {
      opamInputs = {
        core_kernel = selection.core_kernel;
        dune = selection.dune;
        ocaml = selection.ocaml;
        ppx_jane = selection.ppx_jane;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1zw9br34xl87z9rx2sidahv1rin9jsf9xaw3n7rckflmrxvgz1mh";
        package = "packages/timezone/timezone.v0.14.0";
      };
      pname = "timezone";
      src = pkgs.fetchurl {
        sha256 = "095xni0szjqqax2r9zh9820l72ixfga2pl0njnarp3795vkw0rdp";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/timezone-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    topkg = {
      opamInputs = {
        ocaml = selection.ocaml;
        ocamlbuild = selection.ocamlbuild;
        ocamlfind = selection.ocamlfind;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1asjip3cr84b1n1n4q8b5zrcki87niz6imb9m9zaj2kqdywmp0m5";
        package = "packages/topkg/topkg.1.0.3";
      };
      pname = "topkg";
      src = pkgs.fetchurl {
        sha256 = "0b77gsz9bqby8v77kfi4lans47x9p2lmzanzwins5r29maphb8y6";
        url = "http://erratique.ch/software/topkg/releases/topkg-1.0.3.tbz";
      };
      version = "1.0.3";
    };
    typerep = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1f6kka6gd49pqsaqmrfzwvgldswm1sqaakzjzfinb8ya6c0avlkg";
        package = "packages/typerep/typerep.v0.14.0";
      };
      pname = "typerep";
      src = pkgs.fetchurl {
        sha256 = "0rmp5jsjg6sgn5yx0pcvch0phs7nak2fg1d48g5sjcyyyj8n1279";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/typerep-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
    uri = {
      opamInputs = {
        angstrom = selection.angstrom;
        dune = selection.dune;
        ocaml = selection.ocaml;
        stringext = selection.stringext;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1xfsk8i501x9536j155v9zbnmazbgq3qaz400dz8m9zlqisbbynj";
        package = "packages/uri/uri.4.1.0";
      };
      pname = "uri";
      src = pkgs.fetchurl {
        sha256 = "1q9cmcbld0ikp2p5y1pbxgdlrb9lycg7dzkpl3gsmzvws8f90sfj";
        url =
          "https://github.com/mirage/ocaml-uri/releases/download/v4.1.0/uri-v4.1.0.tbz";
      };
      version = "4.1.0";
    };
    variantslib = {
      opamInputs = {
        base = selection.base;
        dune = selection.dune;
        ocaml = selection.ocaml;
      };
      opamSrc = repoPath (repos.opam-repository.src) {
        hash = "sha256:1lx393y49n4llcvx3866jqqaid8qlzknh5m99zyb8v5g4w2kcppn";
        package = "packages/variantslib/variantslib.v0.14.0";
      };
      pname = "variantslib";
      src = pkgs.fetchurl {
        sha256 = "11zp27gh282dx9ifbhcp6i7fkc97fvk8amaj58mf1g1hwklc0lm3";
        url =
          "https://ocaml.janestreet.com/ocaml-core/v0.14/files/variantslib-v0.14.0.tar.gz";
      };
      version = "v0.14.0";
    };
  };
}
